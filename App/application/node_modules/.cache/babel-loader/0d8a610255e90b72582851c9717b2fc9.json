{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nvar _random = require('../../utilities/random');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @param std\n * @constructor\n */\n\n\nvar RandomMatrix = function (_Matrix) {\n  _inherits(RandomMatrix, _Matrix);\n\n  function RandomMatrix(rows, columns, std) {\n    _classCallCheck(this, RandomMatrix);\n\n    var _this = _possibleConstructorReturn(this, (RandomMatrix.__proto__ || Object.getPrototypeOf(RandomMatrix)).call(this, rows, columns));\n\n    _this.rows = rows;\n    _this.columns = columns;\n    _this.std = std;\n\n    for (var i = 0, max = _this.weights.length; i < max; i++) {\n      _this.weights[i] = (0, _random.randomF)(-std, std);\n    }\n\n    return _this;\n  }\n\n  return RandomMatrix;\n}(_2.default);\n\nexports.default = RandomMatrix;","map":null,"metadata":{},"sourceType":"script"}